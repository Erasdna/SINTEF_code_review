De som lager koden anbefaler å gjøre alt i et virtual environment:
virtualenv env
source env/bin/activate

Deretter kan man installere pybamm:

pip install pybamm

Evt også andre pakker: måtte installere casadi, jax og jaxlib i tillegg

Det går nå an å kjøre et helt enkelt eksempel (test.py)
import pybamm
model = pybamm.lithium_ion.DFN()  # Doyle-Fuller-Newman model
sim = pybamm.Simulation(model)
sim.solve([0, 3600])  # solve for 1 hour
sim.plot()

På min PC funker ikke dette. Jeg får beskjed om at jax.tree_util ikke kan importere partial.
For å fikse dette kan due endre partial -> Partial
Liknende feil vil oppstå hver gang jax.partial er nevnt. Du kan fikse dette ved å endre
jax.partial -> jax.tree_util.Partial
(Jeg måtte bare gjøre dette to ganger i det ovennevnte eksempelet).

Nedlasting fra pip: Pass på hvilken versjon som lastes ned av pip! Pip har en tendens til å gi deg en veldig gammel versjon.
I mitt tilfelle ga den en versjon fra 2 år siden. Dette skaper litt problemer siden eksemplene på github ikke tilsvarer den versjonen man faktisk bruker.

Med 0.2.4.post3:
Ved endring av antall punkter (se tutotrial 9 under getting started). Det er ikke nok å bare bruke en string som det står i eksempelet. Variablene i dicten må defineres som pybamm.standard_spatial_vars.x_n osv. istedenfor bare "x_n"

For å få den ferskeste versjonen av PyBaMM kan man følge: https://github.com/pybamm-team/PyBaMM/blob/develop/docs/install/install-from-source.rst

